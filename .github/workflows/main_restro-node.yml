name: Build and deploy Node.js app to Azure Web App - restro-node

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '22'   # keep in sync with your App Service stack

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      # Clean, deterministic install
      - name: Install dependencies
        run: npm ci

      # Generate Prisma Client at build time
      - name: Generate Prisma Client
        run: npx prisma generate

      # Compile TS -> JS (give tsc more heap to avoid OOM)
      - name: Build
        run: node --max-old-space-size=3072 node_modules/typescript/bin/tsc -p tsconfig.json

      # Remove devDependencies from the runtime package
      - name: Prune to production deps
        run: npm ci --omit=dev

      # Create a deployable zip with dist/ + node_modules/ (+ package.json)
      - name: Create deployment package
        run: |
          mkdir -p deploy
          cp package.json package-lock.json deploy/
          cp -r dist deploy/dist
          cp -r node_modules deploy/node_modules
          # include prisma directory only if your runtime needs it
          if [ -d "prisma" ]; then cp -r prisma deploy/prisma; fi
          cd deploy && zip -r ../release.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-zip
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: release-zip
          path: .

      # Deploy the prebuilt zip (no server-side build)
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'restro-node'
          slot-name: 'Production'
          package: 'release.zip'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_AFC49167F53A461995E7B30F18C4BB46 }}